From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LuckerCracker <luckerxd@yandex.ru>
Date: Sun, 15 Oct 2023 14:18:18 +0400
Subject: [PATCH] Fix OfflinePlayer UUID


diff --git a/src/main/java/com/destroystokyo/paper/profile/CraftPlayerProfile.java b/src/main/java/com/destroystokyo/paper/profile/CraftPlayerProfile.java
index 3d9452892a4077e64f37424052a9e52d76dd7a6d..b7b191ea1a650e8f352b1304219436d17c7e0307 100644
--- a/src/main/java/com/destroystokyo/paper/profile/CraftPlayerProfile.java
+++ b/src/main/java/com/destroystokyo/paper/profile/CraftPlayerProfile.java
@@ -13,12 +13,7 @@ import org.spigotmc.SpigotConfig;
 
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
-import java.util.AbstractSet;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.Objects;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 
 public class CraftPlayerProfile implements PlayerProfile {
 
@@ -154,7 +149,7 @@ public class CraftPlayerProfile implements PlayerProfile {
                 profile = lookupUUID ? userCache.getProfile(name) : userCache.getProfileIfCached(name);
             } else {
                 // Make an OfflinePlayer using an offline mode UUID since the name has no profile
-                profile = new GameProfile(UUID.nameUUIDFromBytes(("OfflinePlayer:" + name).getBytes(Charsets.UTF_8)), name);
+                profile = new GameProfile(UUID.nameUUIDFromBytes(("OfflinePlayer:" + name.toLowerCase(Locale.ROOT)).getBytes(Charsets.UTF_8)), name);
             }
             if (profile != null) {
                 // if old has it, assume its newer, so overwrite, else use cached if it was set and ours wasn't
diff --git a/src/main/java/net/minecraft/world/entity/player/EntityHuman.java b/src/main/java/net/minecraft/world/entity/player/EntityHuman.java
index c39c50e53549e9cb9d3520bc7e8b7e89cfa20163..101eaed04b3315709102dfb3f4aabdcca0858270 100644
--- a/src/main/java/net/minecraft/world/entity/player/EntityHuman.java
+++ b/src/main/java/net/minecraft/world/entity/player/EntityHuman.java
@@ -6,13 +6,7 @@ import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Either;
 import java.nio.charset.StandardCharsets;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-import java.util.OptionalInt;
-import java.util.UUID;
+import java.util.*;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.SharedConstants;
@@ -2032,7 +2026,7 @@ public abstract class EntityHuman extends EntityLiving {
     }
 
     public static UUID getOfflineUUID(String s) {
-        return UUID.nameUUIDFromBytes(("OfflinePlayer:" + s).getBytes(StandardCharsets.UTF_8));
+        return UUID.nameUUIDFromBytes(("OfflinePlayer:" + s.toLowerCase(Locale.ROOT)).getBytes(StandardCharsets.UTF_8));
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/storage/WorldNBTStorage.java b/src/main/java/net/minecraft/world/level/storage/WorldNBTStorage.java
index 4d30ca69dd303f1d76c8e6292021deda97851773..585ad1f8963626f6107c95b2ea0cffafe0f03985 100644
--- a/src/main/java/net/minecraft/world/level/storage/WorldNBTStorage.java
+++ b/src/main/java/net/minecraft/world/level/storage/WorldNBTStorage.java
@@ -15,6 +15,8 @@ import org.apache.logging.log4j.Logger;
 // CraftBukkit start
 import java.io.FileInputStream;
 import java.io.InputStream;
+import java.util.Locale;
+
 import net.minecraft.server.level.EntityPlayer;
 import org.bukkit.craftbukkit.entity.CraftPlayer;
 // CraftBukkit end
@@ -58,7 +60,7 @@ public class WorldNBTStorage {
             boolean usingWrongFile = false;
             if ( org.bukkit.Bukkit.getOnlineMode() && !file.exists() ) // Paper - Check online mode first
             {
-                file = new File( this.playerDir, java.util.UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + entityhuman.getName() ).getBytes( "UTF-8" ) ).toString() + ".dat");
+                file = new File( this.playerDir, java.util.UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + entityhuman.getName().toLowerCase(Locale.ROOT) ).getBytes( "UTF-8" ) ).toString() + ".dat");
                 if ( file.exists() )
                 {
                     usingWrongFile = true;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 894c7834f8e5829058e5004829a795a1004510bf..35a9b4999a73405c82bd6a965f2fcc4cb729e3f0 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -29,21 +29,7 @@ import java.io.IOException;
 import java.io.InputStreamReader;
 import java.nio.ByteBuffer;
 import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Base64;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Objects;
-import java.util.Properties;
-import java.util.Random;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 import java.util.function.Consumer;
 import java.util.logging.Level;
 import java.util.logging.Logger;
@@ -1609,7 +1595,7 @@ public final class CraftServer implements Server {
             profile = console.getUserCache().getProfile( name );
         } else {
             // Make an OfflinePlayer using an offline mode UUID since the name has no profile
-            profile = new GameProfile(UUID.nameUUIDFromBytes(("OfflinePlayer:" + name).getBytes(Charsets.UTF_8)), name);
+            profile = new GameProfile(UUID.nameUUIDFromBytes(("OfflinePlayer:" + name.toLowerCase(Locale.ROOT)).getBytes(Charsets.UTF_8)), name);
         }
         return profile != null ? profile.getId() : null;
     }
@@ -1634,7 +1620,7 @@ public final class CraftServer implements Server {
             // Spigot end
             if (profile == null) {
                 // Make an OfflinePlayer using an offline mode UUID since the name has no profile
-                result = getOfflinePlayer(new GameProfile(UUID.nameUUIDFromBytes(("OfflinePlayer:" + name).getBytes(Charsets.UTF_8)), name));
+                result = getOfflinePlayer(new GameProfile(UUID.nameUUIDFromBytes(("OfflinePlayer:" + name.toLowerCase(Locale.ROOT)).getBytes(Charsets.UTF_8)), name));
             } else {
                 // Use the GameProfile even when we get a UUID so we ensure we still have a name
                 result = getOfflinePlayer(profile);
